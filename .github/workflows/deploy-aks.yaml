name: Deploy AKS

on:
  workflow_dispatch: 
    inputs:
      labName:
        description: Labname
        required: true
        type: string
        default: 'abc'

      nodeCount:
        description: Nodecount
        required: true
        type: string
        default: '1'

      cilium:
        description: Enable Cilium
        required: true
        type: boolean
        default: false

jobs: 
  deploy-cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Echo Something
      run: | 
        echo "Hello, Welt!"
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Display az cli version
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az version

    - name: Create Resource Group
      continue-on-error: true
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo group create --name mhsrg-${{ github.event.inputs.labName }} --location westeurope
          az group create --name mhsrg-${{ github.event.inputs.labName }} --location westeurope
           
    - name: Create plain AKS Cluster
      if: ${{ !github.event.inputs.cilium }}
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo az aks create --resource-group mhsrg-${{ github.event.inputs.labName }} --name mhs-${{ github.event.inputs.labName }} --node-count ${{ github.event.inputs.nodeCount }} --node-vm-size Standard_E8_v3 --generate-ssh-keys
          az aks create --resource-group mhsrg-${{ github.event.inputs.labName }} --name mhs-${{ github.event.inputs.labName }} --node-count ${{ github.event.inputs.nodeCount }} --node-vm-size Standard_E8_v3 --generate-ssh-keys
    
    - name: Create Cilium-enabled AKS Cluster
      continue-on-error: true
      if: ${{ github.event.inputs.cilium }} && false
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo az aks create --resource-group mhsrg-${{ github.event.inputs.labName }} --name mhs-${{ github.event.inputs.labName }} --node-count ${{ github.event.inputs.nodeCount }} --node-vm-size Standard_E8_v3 --network-plugin none --generate-ssh-keys
          az aks create --resource-group mhsrg-${{ github.event.inputs.labName }} --name mhs-${{ github.event.inputs.labName }} --node-count ${{ github.event.inputs.nodeCount }} --node-vm-size Standard_E8_v3 --network-plugin none --generate-ssh-keys

    - name: Get Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: mhsrg-${{ github.event.inputs.labName }}
        cluster-name: mhs-${{ github.event.inputs.labName }}

    - name: Install Cilium & Hubble
      if: ${{ github.event.inputs.cilium }}
      run: |           
        CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt)
        CLI_ARCH=amd64
        if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
        curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
        sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
        rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
        echo cilium install --azure-resource-group "mhsrg-${{ github.event.inputs.labName }}"
        cilium install --azure-resource-group "mhsrg-${{ github.event.inputs.labName }}"
        cilium status --wait

        export HUBBLE_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/hubble/master/stable.txt)
        HUBBLE_ARCH=amd64
        if [ "$(uname -m)" = "aarch64" ]; then HUBBLE_ARCH=arm64; fi
        curl -L --fail --remote-name-all https://github.com/cilium/hubble/releases/download/$HUBBLE_VERSION/hubble-linux-${HUBBLE_ARCH}.tar.gz{,.sha256sum}
        sha256sum --check hubble-linux-${HUBBLE_ARCH}.tar.gz.sha256sum
        sudo tar xzvfC hubble-linux-${HUBBLE_ARCH}.tar.gz /usr/local/bin
        rm hubble-linux-${HUBBLE_ARCH}.tar.gz{,.sha256sum}
        cilium hubble enable --ui
        cilium status --wait




    
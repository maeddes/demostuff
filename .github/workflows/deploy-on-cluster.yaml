name: Deploy on AKS

on:
  workflow_dispatch: 
    inputs:
      k8sName:
        description: k8sname
        required: true
        type: string
        default: 'abc'

      argocd:
        description: ArgoCD
        required: true
        type: boolean
        default: false

      cilium:
        description: Cilium Grafana
        required: true
        type: boolean
        default: false

      istio:
        description: Istio
        required: true
        type: boolean
        default: false

      testkube:
        description: Istio
        required: true
        type: boolean
        default: false

      otel:
        description: OpenTelemetry
        required: true
        type: boolean
        default: false

      dqualizer:
        description: dqualizer
        required: true
        type: boolean
        default: false

      ocelot:
        description: ocelot
        required: true
        type: boolean
        default: false

jobs: 
  deploy-cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Echo Something
      run: | 
        echo "Hello, Welt!"
      
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Display az cli version
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az version

    - name: Get Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: mhsrg-${{ github.event.inputs.k8sName }}
        cluster-name: mhs-${{ github.event.inputs.k8sName }}

    - name: Install ArgoCD
      if: ${{ argocd }}
      continue-on-error: true
      run: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
        kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo

    - name: Install Istio
      if: ${{ istio }}
      continue-on-error: true
      run: |
        curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.17.1 sh -
        istio-1.17.1/bin/istioctl install --set profile=default -y 
        kubectl apply -f samples/addons
        kubectl patch svc kiali -n istio-system -p '{"spec": {"type": "LoadBalancer"}}'
        

    - name: Install OpenTelemetry Demo
      if: ${{ otel }}
      continue-on-error: true
      run: |
        kubectl create namespace otel
        helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
        helm install my-otel-demo-tmp open-telemetry/opentelemetry-demo -n otel
        kubectl patch svc my-otel-demo-tmp-frontendproxy -n otel -p '{"spec": {"type": "LoadBalancer"}}'

    - name: Install TestKube
      if: ${{ testkube }}
      continue-on-error: true
      run: |
        curl -sSLf https://get.testkube.io | sh
        /usr/local/bin/testkube init
    
 
    - name: Bill of materials
      continue-on-error: true
      run: |
        INGRESS_IP_ISTIO=$(kubectl get service --namespace istio-system istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[].ip}'); echo Istio Ingress: $INGRESS_IP_ISTIO







    
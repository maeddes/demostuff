cat <<EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: testkube-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http-k8stestkube
      protocol: HTTP
    hosts:
    - "testkube.${INGRESS_DOMAIN}"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: testkube-vs
  namespace: istio-system
spec:
  hosts:
  - "testkube.${INGRESS_DOMAIN}"
  gateways:
  - testkube-gateway
  http:
  - route:
    - destination:
        host: testkube-dashboard.testkube
        port:
          number: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: testkube
  namespace: istio-system
spec:
  host: testkube-dashboard.testkube
  trafficPolicy:
    tls:
      mode: DISABLE
---
EOF


    - name: Install TestKube
      if: ${{ github.event.inputs.testkube == 'true'}}
      continue-on-error: true
      run: |
        wget -qO - https://repo.testkube.io/key.pub | sudo apt-key add - && echo "deb https://repo.testkube.io/linux linux main" | sudo tee -a /etc/apt/sources.list && sudo apt-get update && sudo apt-get install -y testkube
        testkube init

export INGRESS_IP=$(kubectl get service --namespace ingress-nginx ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[].ip}')
echo $INGRESS_IP
export INGRESS_DOMAIN=${INGRESS_IP}.nip.io

cat <<EOF | kubectl apply -f -
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otel
  namespace: otel
spec:
  ingressClassName: nginx
  rules:
    - host: otel.${INGRESS_DOMAIN}
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: oteldemo-frontendproxy
                port:
                  number: 8080
            path: /
---
EOF